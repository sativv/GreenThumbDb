// <auto-generated />
using GreenThumbDb.Database;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace GreenThumbDb.Migrations
{
    [DbContext(typeof(GreenThumbDbContext))]
    [Migration("20231204120430_seedData")]
    partial class seedData
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.25")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("GreenThumbDb.Models.GardenModel", b =>
                {
                    b.Property<int>("GardenId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("GardenId"), 1L, 1);

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.HasKey("GardenId");

                    b.HasIndex("UserId")
                        .IsUnique();

                    b.ToTable("Gardens");
                });

            modelBuilder.Entity("GreenThumbDb.Models.GardenPlantModel", b =>
                {
                    b.Property<int>("PlantId")
                        .HasColumnType("int");

                    b.Property<int>("GardenId")
                        .HasColumnType("int");

                    b.HasKey("PlantId", "GardenId");

                    b.HasIndex("GardenId");

                    b.ToTable("GardenPlants");
                });

            modelBuilder.Entity("GreenThumbDb.Models.InstructionModel", b =>
                {
                    b.Property<int>("InstructionId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("InstructionId"), 1L, 1);

                    b.Property<string>("Instruction")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("plantId")
                        .HasColumnType("int");

                    b.HasKey("InstructionId");

                    b.HasIndex("plantId");

                    b.ToTable("Instructions");

                    b.HasData(
                        new
                        {
                            InstructionId = 1,
                            Instruction = "Place in a sunny spot and water sparingly to keep this desert beauty thriving",
                            plantId = 1
                        },
                        new
                        {
                            InstructionId = 2,
                            Instruction = "Plant in well-draining soil and water in the evening for enchanting blooms under the moonlight.",
                            plantId = 2
                        },
                        new
                        {
                            InstructionId = 3,
                            Instruction = "Provide high humidity and a peaceful environment for this orchid to flourish; avoid direct sunlight.",
                            plantId = 3
                        },
                        new
                        {
                            InstructionId = 4,
                            Instruction = "Keep the soil consistently moist and mist the fern regularly to maintain its lush, cascading fronds.",
                            plantId = 4
                        },
                        new
                        {
                            InstructionId = 5,
                            Instruction = "Plant in a cool, shaded area and water regularly for a burst of blue blooms in the spring.",
                            plantId = 5
                        },
                        new
                        {
                            InstructionId = 6,
                            Instruction = "Trim regularly for bushier growth and plant in well-draining soil to prevent waterlogging.",
                            plantId = 6
                        },
                        new
                        {
                            InstructionId = 7,
                            Instruction = " Allow the soil to dry between watering, and place in a sunny location to enjoy the vibrant violet blossoms.",
                            plantId = 7
                        },
                        new
                        {
                            InstructionId = 8,
                            Instruction = "Provide ample sunlight and well-draining soil; prune occasionally for a bushier appearance and enhanced aroma.",
                            plantId = 8
                        },
                        new
                        {
                            InstructionId = 9,
                            Instruction = "Plant in a sunny spot with good drainage and water sparingly to enjoy the radiant golden blooms.",
                            plantId = 9
                        },
                        new
                        {
                            InstructionId = 10,
                            Instruction = "Thrives in well-draining soil and prefers drier conditions; trim regularly for a fragrant and compact rosemary bush.",
                            plantId = 10
                        });
                });

            modelBuilder.Entity("GreenThumbDb.Models.PlantModel", b =>
                {
                    b.Property<int>("PlantId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("PlantId"), 1L, 1);

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("instructionId")
                        .HasColumnType("int");

                    b.HasKey("PlantId");

                    b.ToTable("Plants");

                    b.HasData(
                        new
                        {
                            PlantId = 1,
                            Name = "Sunshine Succulent",
                            instructionId = 1
                        },
                        new
                        {
                            PlantId = 2,
                            Name = "Mystic Moonflower",
                            instructionId = 2
                        },
                        new
                        {
                            PlantId = 3,
                            Name = "Zen Zephyr Orchid",
                            instructionId = 3
                        },
                        new
                        {
                            PlantId = 4,
                            Name = "Crimson Cascade Fern",
                            instructionId = 4
                        },
                        new
                        {
                            PlantId = 5,
                            Name = "Azure Breeze Bluebell",
                            instructionId = 5
                        },
                        new
                        {
                            PlantId = 6,
                            Name = "Silver Serenity Sage",
                            instructionId = 6
                        },
                        new
                        {
                            PlantId = 7,
                            Name = "Velvet Violet Verbena",
                            instructionId = 7
                        },
                        new
                        {
                            PlantId = 8,
                            Name = "Emerald Echo Eucalyptus",
                            instructionId = 8
                        },
                        new
                        {
                            PlantId = 9,
                            Name = "Golden Glow Gazania",
                            instructionId = 9
                        },
                        new
                        {
                            PlantId = 10,
                            Name = "Rustic Rosemary Radiance",
                            instructionId = 10
                        });
                });

            modelBuilder.Entity("GreenThumbDb.Models.UserModel", b =>
                {
                    b.Property<int>("UserId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("UserId"), 1L, 1);

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Username")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("UserId");

                    b.ToTable("Users");

                    b.HasData(
                        new
                        {
                            UserId = 1,
                            Password = "WurYLWDQvNzuUtvXe+jTEg==",
                            Username = "david"
                        });
                });

            modelBuilder.Entity("GreenThumbDb.Models.GardenModel", b =>
                {
                    b.HasOne("GreenThumbDb.Models.UserModel", "User")
                        .WithOne("Garden")
                        .HasForeignKey("GreenThumbDb.Models.GardenModel", "UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("User");
                });

            modelBuilder.Entity("GreenThumbDb.Models.GardenPlantModel", b =>
                {
                    b.HasOne("GreenThumbDb.Models.GardenModel", "Garden")
                        .WithMany("GardenPlant")
                        .HasForeignKey("GardenId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("GreenThumbDb.Models.PlantModel", "Plant")
                        .WithMany("GardenPlant")
                        .HasForeignKey("PlantId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Garden");

                    b.Navigation("Plant");
                });

            modelBuilder.Entity("GreenThumbDb.Models.InstructionModel", b =>
                {
                    b.HasOne("GreenThumbDb.Models.PlantModel", "Plant")
                        .WithMany("Instructions")
                        .HasForeignKey("plantId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Plant");
                });

            modelBuilder.Entity("GreenThumbDb.Models.GardenModel", b =>
                {
                    b.Navigation("GardenPlant");
                });

            modelBuilder.Entity("GreenThumbDb.Models.PlantModel", b =>
                {
                    b.Navigation("GardenPlant");

                    b.Navigation("Instructions");
                });

            modelBuilder.Entity("GreenThumbDb.Models.UserModel", b =>
                {
                    b.Navigation("Garden")
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
